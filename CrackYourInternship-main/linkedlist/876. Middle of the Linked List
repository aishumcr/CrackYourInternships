Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.




/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution
{
    static int getlen(Node node){
        int c=0;
        while(node!=null){
            c+=1;
            node=node.next;
        }
        return c;
    }
    int getMiddle(Node head)
    {
        int s=getlen(head);
        int v=0;
        while(v<s/2){
            head=head.next;
            v++;
        }
        return head.data;
         // Your code here.
    }
}
