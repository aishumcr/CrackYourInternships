/**Given an integer array nums, return an integer array counts where counts[i] is the number of smaller elements to the right of nums[i].
Input: nums = [5,2,6,1]
Output: [2,1,1,0]
Explanation:
To the right of 5 there are 2 smaller elements (2 and 1).
To the right of 2 there is only 1 smaller element (1).
To the right of 6 there is 1 smaller element (1).
To the right of 1 there is 0 smaller element.**/

CODE:
//brute we just find by running loops. and add elemets to list.

import java.util.stream.*;
class Solution {
    public List<Integer> countSmaller(int[] nums) {
        int n=nums.length;
        int[] ca1=new int[n];
        if(nums.length==1){
            List<Integer> newa=new ArrayList<>();
            newa.add(0);
            return newa;
        }
        for(int i=0;i<n-1;i++){
            for(int j=i+1;j<n;j++){
                if(nums[i]>nums[j]){
                    ca1[i]+=1;
                }
            }
        }
        List<Integer> ca=new ArrayList<>();
        for(int i:ca1){
            ca.add(i);
        }
        return ca;
        
    }
}
