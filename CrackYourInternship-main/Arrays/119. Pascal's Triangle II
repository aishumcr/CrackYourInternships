Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Input: rowIndex = 3
Output: [1,3,3,1]
Example 2:

Input: rowIndex = 0
Output: [1]
Example 3:

Input: rowIndex = 1
Output: [1,1]


class Solution {
    public List<Integer> getRow(int rowIndex) {
    List<List<Integer>>ans=new ArrayList<>();
    List<Integer>firstRow=new ArrayList<>();
    firstRow.add(1);
    if(rowIndex==0) return firstRow;
    ans.add(firstRow);
    for(int i=1;i<=rowIndex;i++){
        List<Integer>prev=ans.get(i-1);
        List<Integer> curr=new ArrayList<>();
        curr.add(1);
        for(int j=1;j<i;j++){
            curr.add(prev.get(j-1)+prev.get(j));
        }
        curr.add(1);
        ans.add(curr);
    }
    return ans.get(rowIndex);
    }
}
