//2 pointer approach which is left and right technique .
//move right when sum<k.decrease left when sum>k.
//find length when sum==k.
public class Solution {
    public static int longestSubarrayWithSumK(int []a, long k) {
       int left=0,right=0;
       long sum=a[0];
       int n=a.length;
       int maxlen=0;
       while(right < n){
           while(left <=right && sum>k){
               sum-=a[left];
               left++;
           }
           if(sum==k) maxlen=Math.max(maxlen,right-left+1);
           right++;
           if(right < n) sum+=a[right];
       }
       return maxlen;
    }
}
