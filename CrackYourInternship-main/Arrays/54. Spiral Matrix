Given an m x n matrix, return all elements of the matrix in spiral order.

 

Example 1:


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int n=matrix.length;
        int m=matrix[0].length;
        List<Integer> arr=new ArrayList<>();
        int left=0,right=m-1,top=0,bottom=n-1;
        
        while(top<= bottom && left<=right){
        //right
        for(int i=left;i<=right;i++){
            arr.add(matrix[top][i]);
        }
        //bottom
        top++;
        for(int i=top;i<=bottom;i++){
            arr.add(matrix[i][right]);
        }
        //left
        right--;
        if(top<=bottom){
        for(int i=right;i>=left;i--){
             arr.add(matrix[bottom][i]);
        }
        //top
        bottom--;
        }
        if(left<=right){
        for(int i=bottom;i>=top;i--){
             arr.add(matrix[i][left]);
        }
        left++;
        }

        }



        return arr;
    }
}
