The next greater element of some element x in an array is the first greater element that is to the right of x in the same array.

You are given two distinct 0-indexed integer arrays nums1 and nums2, where nums1 is a subset of nums2.

For each 0 <= i < nums1.length, find the index j such that nums1[i] == nums2[j] and determine the next greater element of nums2[j] in nums2. If there is no next greater element, then the answer for this query is -1.

Return an array ans of length nums1.length such that ans[i] is the next greater element as described above.

 

Example 1:

Input: nums1 = [4,1,2], nums2 = [1,3,4,2]
Output: [-1,3,-1]
Explanation: The next greater element for each value of nums1 is as follows:
- 4 is underlined in nums2 = [1,3,4,2]. There is no next greater element, so the answer is -1.
- 1 is underlined in nums2 = [1,3,4,2]. The next greater element is 3.
- 2 is underlined in nums2 = [1,3,4,2]. There is no next greater element, so the answer is -1.
Example 2:

Input: nums1 = [2,4], nums2 = [1,2,3,4]
Output: [3,-1]
Explanation: The next greater element for each value of nums1 is as follows:
- 2 is underlined in nums2 = [1,2,3,4]. The next greater element is 3.
- 4 is underlined in nums2 = [1,2,3,4]. There is no next greater element, so the answer is -1.


SOLUTION::


class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        HashMap<Integer,Integer> hm=new HashMap<>();
        int[] arr=new int[nums1.length];
        int n=nums1.length-1;
         for(int i=0;i<nums2.length;i++){
            hm.put(nums2[i],i);
        }
        for(int j=0;j<nums1.length;j++){
            int indx=hm.getOrDefault(nums1[j],-1);
            if(indx!=-1){
            for(int i=indx+1;i<=nums2.length-1;i++){
                    if(nums2[i]>nums1[j]){
                        arr[j]=nums2[i];
                        break;}
            }
            }
            if(arr[j]==0) arr[j]=-1;
        }
        return arr;
    }
}

mapp = {x:-1 for x in nums1}
        stack = []

        for num in nums2:
            while stack and stack[-1] < num:
                prev_num = stack.pop()
                mapp[prev_num] = num
            stack.append(num)
