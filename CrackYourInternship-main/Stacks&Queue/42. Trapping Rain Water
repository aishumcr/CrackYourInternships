Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

 

Example 1:


Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.




class Solution {
    public int trap(int[] height) {
        int n=height.length;
        int ml[]=new int[n];
        int mr[]=new int[n];
        int tw=0;
        ml[0]=height[0];
        mr[n-1]=height[n-1];
        for(int i=1;i<n;i++){
            ml[i]=Math.max(ml[i-1],height[i]);
        }
        for(int i=n-2;i>=0;i--){
            mr[i]=Math.max(mr[i+1],height[i]);
        }
        for(int i=1;i<n;i++){
           tw+=Math.min(ml[i],mr[i])-height[i];
        }
        return tw;
    }
}
