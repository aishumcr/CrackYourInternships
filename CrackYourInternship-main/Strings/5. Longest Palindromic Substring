Given a string s, return the longest 
palindromic
 
substring
 in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.


class Solution {
    public String longestPalindrome(String S) {
        int start = 0;
        int maxLen = 1;
        for (int i = 0; i < S.length(); i++) {
            int r = i+1;
            int l = i;
            System.out.println(l + " " + r);
            while (l >= 0 && r < S.length() && S.charAt(l) == S.charAt(r)) {
                if (r - l + 1 > maxLen) {
                    maxLen = r - l + 1;
                    start = l;
                }
                l--;
                r++;
            }
            
            l = i - 1;
            r = i + 1;
            while (l >= 0 && r < S.length() && S.charAt(l) == S.charAt(r)) {
                if (r - l + 1 > maxLen) {
                    maxLen = r - l + 1;
                    start = l;
                }
                l--;
                r++;
            }
        }
        return S.substring(start, start + maxLen);
    }
}
