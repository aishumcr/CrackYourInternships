Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

 

Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.
Example 2:

Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.



SOLUTION:: here we just compare using 2 pointers i&j,when i and j amtches we move j,if length of j is found we return i or we again start from i+1.


    int haylength=haystack.length();
        int needlelength=needle.length();
        if(haylength<needlelength)
            return -1;
        for(int i=0;i<=haystack.length()-needle.length();i++){
            int j=0;
            while(j<needle.length() && haystack.charAt(i+j)==needle.charAt(j))
                j++;
            if(j==needle.length()){
                return i;
            }
        }
        return -1;


Solution 2 :: 


if(haystack.length()<needle.length()) return -1;
       for(int i=0;i<=haystack.length()-needle.length();i++){
           char ch=haystack.charAt(i);
           if(ch==needle.charAt(0)){
               int k=i;
               int j;
               for(j=0;j<needle.length();j++){
                   char ch1=needle.charAt(j);
                   char ch2=haystack.charAt(k);
                   if(ch1!=ch2) break;
                   k++;
               }
               if(j==needle.length()) return i;
           }
       }
       return -1;
