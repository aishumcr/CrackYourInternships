A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

 

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.


class Solution {
    public boolean isPalindrome(String s) {
       StringBuffer sb=new StringBuffer();
       for(int i=0;i<s.length();i++){
           if(Character.isAlphabetic(s.charAt(i))){
               char x=s.charAt(i);
               sb.append(Character.toLowerCase(x));
           }
           if(Character.isDigit(s.charAt(i))){
               sb.append( s.charAt(i));
           }
       } 
    if(sb.length()==0) return true;
       int p1=0,p2=sb.length()-1;
       while(p1<p2){
           if(sb.charAt(p1)!=sb.charAt(p2)) return false;
           p1++;
           p2--;
       }
       return true;
    }
}



solution 2 :

class Solution {
    public boolean isPalindrome(String s) {
        if (s.isEmpty()) {
        	return true;
        }
        int start = 0;
        int last = s.length() - 1;
        while(start <= last) {
        	char currFirst = s.charAt(start);
        	char currLast = s.charAt(last);
        	if (!Character.isLetterOrDigit(currFirst )) {
        		start++;
        	} else if(!Character.isLetterOrDigit(currLast)) {
        		last--;
        	} else {
        		if (Character.toLowerCase(currFirst) != Character.toLowerCase(currLast)) {
        			return false;
        		}
        		start++;
        		last--;
        	}
        }
        return true;
    }
}
