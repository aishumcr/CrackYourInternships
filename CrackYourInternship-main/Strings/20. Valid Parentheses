Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"
Output: true

class Solution {
    public boolean isValid(String s) {
        if(s.length()==0) return true;
        int n=0;
        HashMap<Character,Character>hm=new HashMap<>();
        List<Character> arr=new ArrayList<>();
        hm.put('}','{');
        hm.put(')','(');
        hm.put(']','[');
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='('||s.charAt(i)=='{'||s.charAt(i)=='[' ){
                arr.add(s.charAt(i));
            }
            else{
                if(arr.isEmpty() || arr.remove(arr.size()-1)!=hm.get(s.charAt(i))) return false;  
            }
        }
        if(arr.size()==0) 
            return true;
        return false;
    }
}
