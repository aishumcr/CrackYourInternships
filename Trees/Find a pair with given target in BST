Given a Binary Search Tree and a target sum. Check whether there's a pair of Nodes in the BST with value summing up to the target sum.


class Solution
{
    // root : the root Node of the given BST
    // target : the target sum
    public static boolean find(Node root,int tar,Set<Integer> hs){
        if(root==null) return false;
        if(hs.contains(tar-root.data)){
            return true;
        }
        hs.add(root.data);
        return find(root.left,tar,hs)||find(root.right,tar,hs);
    }
    
    public int isPairPresent(Node root, int target)
    {
        Set<Integer>hs=new HashSet<>();
        if(find(root,target,hs)) return 1;
        return 0;
        // Write your code here
        
    }
}
