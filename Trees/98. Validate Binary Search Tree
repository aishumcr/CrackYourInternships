Given the root of a binary tree, determine if it is a valid binary search tree (BST).

A valid BST is defined as follows:

The left 
subtree
 of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.


SOLUTION::


class Solution {
    boolean validate(TreeNode root,long max,long min){
        if(root==null) return true;
        if(root.val<=min  || root.val>=max) return false;
        return validate(root.left,root.val,min) && validate(root.right,max,root.val);
    }
    public boolean isValidBST(TreeNode root) {
        return validate(root,Long.MAX_VALUE,Long.MIN_VALUE);
    }
}
