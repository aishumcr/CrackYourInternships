Given the root of a Binary Search Tree (BST), return the minimum absolute difference between the values of any two different nodes in the tree.

Input: root = [4,2,6,1,3]
Output: 1

class Solution {
    ArrayList<Integer> arr=new ArrayList<>();
    public void elements(TreeNode root){
        if(root==null) 
            arr.add(0);
        if(root.left!=null) elements(root.left);
         arr.add(root.val);
        if(root.right!=null) elements(root.right);
    }
    public int getMinimumDifference(TreeNode root) {
        if(root==null){
            return 0;
        }
         if(root!=null && root.left==null && root.right==null){
            return root.val;
        }
        elements(root);
        int minv=Integer.MAX_VALUE;
        //Collections.sort(arr);
        for(int i=0;i<arr.size()-1;i++){
            minv=Math.min(minv,arr.get(i+1)-arr.get(i));
        }
  return minv;
    }
}
